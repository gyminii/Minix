import { ActiveThemeProvider } from "@/components/active-theme";
import { fontVariables } from "@/lib/fonts";
import { cn } from "@/lib/utils";
import type { Metadata } from "next";
import { ThemeProvider } from "next-themes";
import { cookies } from "next/headers";
import "./globals.css";

import { DEFAULT_THEME, ThemeType } from "@/lib/themes";
export const metadata: Metadata = {
	title: "Create Next App",
	description: "Generated by create next app",
};

export default async function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode;
}>) {
	const cookieStore = await cookies();
	const cookieStoreValue = (key: string) => cookieStore.get(key)?.value;

	const themeSettings: ThemeType = {
		preset: (cookieStoreValue("theme_preset") ??
			DEFAULT_THEME.preset) as ThemeType["preset"],
		chartPreset: (cookieStoreValue("theme_chart_preset") ??
			DEFAULT_THEME.chartPreset) as ThemeType["chartPreset"],
		scale: (cookieStoreValue("theme_scale") ??
			DEFAULT_THEME.scale) as ThemeType["scale"],
		radius: (cookieStoreValue("theme_radius") ??
			DEFAULT_THEME.radius) as ThemeType["radius"],
		font: (cookieStoreValue("theme_font") ??
			DEFAULT_THEME.font) as ThemeType["font"],
		contentLayout: (cookieStoreValue("theme_content_layout") ??
			DEFAULT_THEME.contentLayout) as ThemeType["contentLayout"],
	};

	const bodyAttributes = Object.fromEntries(
		Object.entries(themeSettings)
			.filter(([value]) => value)
			.map(([key, value]) => [
				`data-theme-${key.replace(/([A-Z])/g, "-$1").toLowerCase()}`,
				value,
			])
	);
	return (
		<html lang="en" suppressHydrationWarning>
			<body
				suppressHydrationWarning
				className={cn("bg-background group/layout font-sans", fontVariables)}
				{...bodyAttributes}
			>
				<ThemeProvider
					attribute="class"
					defaultTheme="light"
					enableSystem
					disableTransitionOnChange
				>
					<ActiveThemeProvider initialTheme={themeSettings}>
						<div className="pb-0 xl:group-data-[theme-content-layout=centered]/layout:container xl:group-data-[theme-content-layout=centered]/layout:mx-auto xl:group-data-[theme-content-layout=centered]/layout:mt-8">
							{children}
						</div>
					</ActiveThemeProvider>
				</ThemeProvider>
			</body>
		</html>
	);
}
